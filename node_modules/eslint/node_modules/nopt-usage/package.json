{
  "_args": [
    [
      {
        "raw": "nopt-usage@^0.1.0",
        "scope": null,
        "escapedName": "nopt-usage",
        "name": "nopt-usage",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/Waffle/git/Markit/webapp/node_modules/eslint/node_modules/npm-license"
    ]
  ],
  "_from": "nopt-usage@>=0.1.0 <0.2.0",
  "_id": "nopt-usage@0.1.0",
  "_inCache": true,
  "_location": "/nopt-usage",
  "_npmUser": {
    "name": "zaach",
    "email": "zack.carter@gmail.com"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nopt-usage@^0.1.0",
    "scope": null,
    "escapedName": "nopt-usage",
    "name": "nopt-usage",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/npm-license"
  ],
  "_resolved": "https://registry.npmjs.org/nopt-usage/-/nopt-usage-0.1.0.tgz",
  "_shasum": "b18b8c183e181047ca9e63b7cde7cfc702cca579",
  "_shrinkwrap": null,
  "_spec": "nopt-usage@^0.1.0",
  "_where": "/Users/Waffle/git/Markit/webapp/node_modules/eslint/node_modules/npm-license",
  "author": "",
  "dependencies": {},
  "description": "This module generates a usage string for nopt options. It's based on [this](https://github.com/npm/nopt/pull/13) PR from Filirom1.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b18b8c183e181047ca9e63b7cde7cfc702cca579",
    "tarball": "https://registry.npmjs.org/nopt-usage/-/nopt-usage-0.1.0.tgz"
  },
  "keywords": [
    "nopt",
    "option",
    "parser",
    "help",
    "usage"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "zaach",
      "email": "zack.carter@gmail.com"
    }
  ],
  "name": "nopt-usage",
  "optionalDependencies": {},
  "readme": "# Show usage\n\nThis module generates a usage string for nopt options. It's based on [this](https://github.com/npm/nopt/pull/13) PR from Filirom1.\n\n```\nvar noptUsage = require('nopt-usage');\nnoptUsage(knownOpts, shortHands, description1, description2, ...)\n```\n## install\n\n    npm install nopt-usage\n\n## example\n\nYou could pass as many description objects as you want. Take a look at the following example to understand how it could be used.\n\n```\n#!/usr/bin/env node\n\nvar nopt = require(\"nopt\")\n  , noptUsage = require(\"nopt-usage\")\n  , Stream = require(\"stream\").Stream\n  , path = require(\"path\")\n  , knownOpts = { \"foo\" : [String, null]\n                , \"bar\" : [Stream, Number]\n                , \"baz\" : path\n                , \"bloo\" : [ \"big\", \"medium\", \"small\" ]\n                , \"flag\" : Boolean\n                , \"pick\" : Boolean\n                }\n  , shortHands = { \"foofoo\" : [\"--foo\", \"Mr. Foo\"]\n                 , \"b7\" : [\"--bar\", \"7\"]\n                 , \"m\" : [\"--bloo\", \"medium\"]\n                 , \"p\" : [\"--pick\"]\n                 , \"f\" : [\"--flag\", \"true\"]\n                 , \"g\" : [\"--flag\"]\n                 , \"s\" : \"--flag\"\n                 }\n  , description = { \"foo\" : \"Something really foooooooo\"\n                  , \"bar\" : \"A bar thing\"\n                  , \"baz\" : \"More or less baz\"\n                  , \"flag\" : \"Flag it as well\"\n                  , \"pick\" : \"Or pick something\"\n                  }\n  , defaults = { \"foo\" : null\n               , \"bar\" : 42\n               , \"baz\" : \"/etc/passwd\"\n               , \"bloo\" : \"small\"\n               , \"pick\" : false\n               }\n             // everything is optional.\n             // knownOpts and shorthands default to {}\n             // arg list defaults to process.argv\n             // slice defaults to 2\n  , parsed = nopt(knownOpts, shortHands, process.argv, 2)\n  , usage = noptUsage(knownOpts, shortHands, description, defaults)\n\nconsole.log('Usage: ')\nconsole.log(usage)\n```\n\nThe output is:\n\n```\nUsage:\n    --foo, -foofoo        Something really foooooooo    null           \n    --bar, -b7            A bar thing                   42             \n    --baz                 More or less baz              /etc/passwd    \n    --bloo, -m                                          small          \n    --flag, -f, -g, -s    Flag it as well                              \n    --pick, -p            Or pick something             false          \n```\n\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
